{'body': 'From nobody Fri Sep  7 01:05:25 2018\nContent-Type: text/plain; charset=ISO-8859-1\n\nHi, Boyd!\r\n\r\nOn Tue, Apr 20, 2010 at 11:18 AM, Boyd Stephen Smith Jr. <\r\nbss@iguanasuicide.net> wrote:\r\n\r\n>\r\n> Not portably.  It might be possible by parsing ($SHELL -V -c \'exit 123\') or\r\n> ($SHELL --version -c \'exit 123\').\r\n>\r\n\r\nSay, that\'s a clever approach, thanks for suggesting it.\r\n\r\nSorry, I don\'t even see a good way to tell if a function with a particular\r\n> name is defined, but less list all the functions in the current shell\r\n> environment.\r\n>\r\n\r\nCan you clarify?  Listing all the functions in the current shell environment\r\nsolves my issue perfectly.. But less is just a pager, no?  Oh, wait, did you\r\nmean "much less list"?   In which case, we\'re in the same boat, but I\'m\r\nhoping there is a solution I\'m not aware of (even though my hopes are dim :)\r\n)\r\n\r\n\r\n> Bash is still an essential package last I checked.  You might simply use\r\n> /bin/bash and whatever bash-isms you like.\r\n>\r\n>\r\nThat would work pretty much everywhere except bone-stock Solaris, where I\r\nhave no possibility of recovery -- "/bin/bash: bad interpreter: No such file\r\nor directory".  At least if I use /bin/sh as my interpreter, I can always at\r\nthe very least output an error message.\r\n\r\nI suppose my other alternative is roughly  [ -x /bin/bash ] && /bin/bash $0\r\n$* && exit $?, and assume that everywhere-but-solaris has /bin/bash. Hmm.\r\nIf debian keeps bash around as a default package, even when dash-is-bin-sh,\r\nthen I guess I\'m in fairly safe territory in that regard.\r\n\r\nThanks,\r\nWes\r\n\r\n-- \r\nWesley W. Garland\r\nDirector, Product Development\r\nPageMail, Inc.\r\n+1 613 542 2787 x 102\r\n', 'subject': 'Re: dash-as-bin-sh'}