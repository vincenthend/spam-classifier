{'body': "\r\nOn 3. mai 2010, at 14.36, Matev=C5=BE Markovi=C4=8D wrote:\r\n\r\n> Since I am still an amateur in the Java language, I want to practice\r\n> as much as possible. Not long ago I came along with an idea, that I\r\n> want to write a application (Swing application), from which one will\r\n> be able to choose a file and safely delete it (e.g. rename,delete,\r\n> overwrite 35-times, possibly less).\r\n\r\nI'm not really sure if this is guarateed to work on all Java =\r\nimplementations, but you could try to open the file for random access =\r\n(http://java.sun.com/j2se/1.5.0/docs/api/java/io/RandomAccessFile.html), =\r\nthen write random data to the entire contents of the file before you =\r\ndelete. It might even work if you first open, then delete, before =\r\nwriting random data if you prefer that.=20\r\n\r\nBut it might be that you are better off finding a command-line tool that =\r\nhandles the secure deletion for you, and create a Swing app that =\r\ndelegates the heavy lifting to the command-line tool. Low-level file =\r\nsystem access isn't really one of Java's strong points, as its foucs has =\r\nalways been being cross-platform (Java 7's NIO.2 functionality might fix =\r\nsome of these issues though) .\r\n\r\n\r\nBest regards,\r\n\r\n--=20\r\nHarald K=\r\n _______________________________________________\r\nDo not post admin requests to the list. They will be ignored.\r\nJava-dev mailing list      (Java-dev@lists.apple.com)\r\nHelp/Unsubscribe/Update your Subscription:\r\nhttp://lists.apple.com/mailman/options/java-dev/mlsubscriber.tech%40csmining.org\r\n\r\nThis email sent to mlsubscriber.tech@csmining.org\r\n\r\n", 'subject': 'Re: Safely delete (35-pass) file with a Java application'}