{'body': "On 27/04/2010 02:30, Benson Margulies wrote:\r\n> A quick benchmark of some CPU-intensive code of ours shows a quite marked\r\n> slowdown with that option turned on.\r\n\r\n(Not disagreeing with the general point.)\r\n\r\nFor what it's worth, I've been running Eclipse (on 10.6, 64-bit) with\r\nthe UseCompressedOoops option for months now - if anyone recalls, Apple\r\nfixed the issue with the default garbage collector so that it now\r\nautomatically chooses one that doesn't crash with that option - and it's\r\nvery fast.\r\n\r\nOf course, I only have my work computer to compare it against (which is\r\na Pentium 4 PC, with a hard drive that appears to have some kind of\r\nidentity issue, since it obviously thinks it's a C64 cassette) - but\r\nstill, I don't notice any performance problems.\r\n\r\nAlso note, I'm sure the behaviour is different on different benchmarks.\r\nI did a quick search and found two benchmarks:\r\n\r\nhttp://www.matsim.org/book/export/html/330\r\nhttp://blog.juma.me.uk/tag/compressed-oops/\r\n\r\nAs it happens, both these show a performance win for the option, but\r\nthese are only two samples. I'm sure certain usage patterns are indeed\r\nnoticeably slower so I agree, if using CPU-critical code where\r\nperformance is a concern, it's probably best to work out a repeatable\r\ntest and try both options. Just saying, 'assuming' is never a good idea,\r\nbut don't assume it'll be slower either. :)\r\n\r\n--sam\r\n _______________________________________________\r\nDo not post admin requests to the list. They will be ignored.\r\nJava-dev mailing list      (Java-dev@lists.apple.com)\r\nHelp/Unsubscribe/Update your Subscription:\r\nhttp://lists.apple.com/mailman/options/java-dev/mlsubscriber.tech%40csmining.org\r\n\r\nThis email sent to mlsubscriber.tech@csmining.org\r\n\r\n", 'subject': "Re: Don't be too quick to assume that -XX:+UseCompressedOops is a\r\n good \tthing"}