{'body': 'On Tue, 2002-08-27 at 08:58, Joseph S. Barrera III wrote:\n>\n> C is more reliable than Java??\n\n\nBoth are reliable.  "Reliability" is more a function of the software\nengineer.  I\'ve written complicated mission-critical server software in\nJava that will run without a hiccup as long as the Unix box it is\nsitting on is running.  Same with C.  For processes that are running\nmonths at a time, and in my case constantly touching databases and doing\nlots of low-level network stuff, reliability is obtained by making sure\nevery conceivable problem (and problems you didn\'t conceive of) recovers\nto a clean/safe process state so that things keep running i.e. it is a\ndesign/programming issue.\n\nThat said, we usually prototype serious systems in Java and then\nre-implement them in C if we have time.  Java doesn\'t scale well as a\nlanguage for server apps, though not for the reasons usually offered. \nThe problem is that for high-end server apps, you really need fairly\ndetailed and low-level control of system resources to get around\nbottlenecks that show up relatively quickly in languages that don\'t give\nyou access to it.  You can squeeze several times the performance out of\na C server program than a Java one simply by being able to finely tune\n(or more frequently, bypass) the system resource management. \nNonetheless, this is not a significant factor for most applications you\ncould conceivably develop in either language, as most aren\'t limited by\nraw performance scalability.\n\n\n-James Rogers\n jamesr@best.com\n\n\n', 'subject': 'Re: Java is for kiddies'}