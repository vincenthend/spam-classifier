{'body': 'Example code:\r\n\r\n#import <Foundation/Foundation.h>\r\n#import <DiskArbitration/DiskArbitration.h>\r\n\r\nDADissenterRef\r\nDiskApproved(DADiskRef disk, void *context)\r\n{\r\n\tchar const *CdiskName = DADiskGetBSDName(disk);\r\n\tDADissenterRef dissenter;\r\n\tchar *type;\r\n\tNSString *diskName = [NSString stringWithUTF8String:CdiskName];\r\n\tNSRange s1s1NumberRange = NSMakeRange([diskName length] - 4, 4);\r\n\r\n\tif([[diskName substringWithRange:s1s1NumberRange]  \r\nisEqualToString:@"s3s1"]) /* check for our magic partition */\r\n\t{\r\n\t\tCFStringRef arguments[] =\r\n\t\t{\r\n\t\t\tCFStringCreateWithCString(kCFAllocatorDefault, "nobrowse",  \r\nkCFStringEncodingUTF8),\r\n\t\t\tCFStringCreateWithCString(kCFAllocatorDefault, "owners",  \r\nkCFStringEncodingUTF8),\r\n\t\t\tCFStringCreateWithCString(kCFAllocatorDefault, "suid",  \r\nkCFStringEncodingUTF8),\r\n\t\t\tNULL\r\n\t\t};\r\n\r\n\t\tDADiskMountWithArguments(disk,\r\n\t\t\t\t\t\t\t\tNULL,\r\n\t\t\t\t\t\t\t\tkDADiskMountOptionDefault,\r\n\t\t\t\t\t\t\t\tNULL,\r\n\t\t\t\t\t\t\t\tNULL,\r\n\t\t\t\t\t\t\t\targuments);\r\n\r\n\t\t/* deny the mount since we already mounted it */\r\n\t\tdissenter = DADissenterCreate(kCFAllocatorDefault,\r\n\t\t\t\t\t\t\t\t\tkDAReturnNotPermitted,\r\n\t\t\t\t\t\t\t\t\tCFSTR("mounted hidden"));\r\n\r\n\t\ttype = "mounted hidden";\r\n\t}\r\n\telse\r\n\t{\r\n\t\t/* allow normal mounting */\r\n\t\tdissenter = NULL;\r\n\r\n\t\ttype = "mounted normal";\r\n\t}\r\n\r\n\tprintf("%s: %s\\n", CdiskName, type);\r\n\r\n\treturn dissenter;\r\n}\r\n\r\nint\r\nmain (int argc, const char * argv[])\r\n{\r\n     NSAutoreleasePool *pool = [NSAutoreleasePool new];\r\n\tDAApprovalSessionRef session = DAApprovalSessionCreate \r\n(kCFAllocatorDefault);\r\n\r\n\tif (!session)\r\n\t{\r\n\t\tfprintf(stderr, "failed to create Disk Arbitration session");\r\n\t\tgoto out;\r\n\t}\r\n\r\n\tDARegisterDiskMountApprovalCallback(session,\r\n\t\t\t\t\t\t\t\t\t\tNULL,  // matches all disk objects\r\n\t\t\t\t\t\t\t\t\t\tDiskApproved,\r\n\t\t\t\t\t\t\t\t\t\tNULL); // context\r\n\r\n\tDAApprovalSessionScheduleWithRunLoop(session,\r\n\t\t\t\t\t\t\t\t\t\t CFRunLoopGetCurrent(),\r\n\t\t\t\t\t\t\t\t\t\t kCFRunLoopDefaultMode);\r\n\r\n\tCFRunLoopRunInMode(kCFRunLoopDefaultMode,\r\n\t\t\t\t\t\t60 /* seconds */,\r\n\t\t\t\t\t\tfalse);\r\n\r\n\tDAApprovalSessionUnscheduleFromRunLoop(session,\r\n\t\t\t\t\t\t\t\t\t\t CFRunLoopGetCurrent(),\r\n\t\t\t\t\t\t\t\t\t\t kCFRunLoopDefaultMode);\r\n\r\n\tDAUnregisterApprovalCallback(session,\r\n\t\t\t\t\t\t\t\tDiskApproved,\r\n\t\t\t\t\t\t\t\tNULL);\r\n\r\nout:\r\n    if (session)\r\n\t\tCFRelease(session);\r\n\r\n     [pool release];\r\n\r\n\treturn 0;\r\n}\r\n\r\n\r\n________________________________________________________________________ \r\n_______________________\r\n\r\n\r\nThe example appears to work but I\'m noticing when calling  \r\nDADiskMountWithArguments() from the callback function it seems to  \r\ntrigger the approval process for the same partition, is there  \r\nsomething I need to do to prevent this?\r\n\r\nAlso, is it possible to change the mountroot rather than specifying a  \r\nmountpoint???\r\n\r\nI\'ve look at suggested solution to my mount issue and a manual  \r\nsolution is not acceptable or the use of the fstab file because it  \r\ncannot be guaranteed that it exists or that the content will be correct.\r\n\r\nIt has been suggested that example code does exist however no one has  \r\npoint me to or provided me with or even a link to any sample code and  \r\ngoogle is pretty useless.\r\n\r\n-- Dale\r\n _______________________________________________\r\nDo not post admin requests to the list. They will be ignored.\r\nFilesystem-dev mailing list      (Filesystem-dev@lists.apple.com)\r\nHelp/Unsubscribe/Update your Subscription:\r\nhttp://lists.apple.com/mailman/options/filesystem-dev/mlsubscriber.tech%40csmining.org\r\n\r\nThis email sent to mlsubscriber.tech@csmining.org\r\n\r\n', 'subject': 'Re: auto mounting a partition with nobrowse'}