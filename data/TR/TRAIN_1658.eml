{'body': 'Hi All,\n\nI am stuck in the quicktime API ICMDecompressionSessionDecodeFrame()\nfor a while, and I could not find any other resources or any other\nsample code. Could any body help me out, and any suggestions\nappreciated.\n\nI want to import a movie file from local drive, get the compressed\nvideo frames, decode them, and encapsulate them into our own\nUncVideoUnit format.\nRight now we have already got the compressed video frames, but when we\nare trying to decode them, we have got some problem. Here is our\nsource code, could any body tell me if there is something wrong in our\ncode.\n\n\n\t\t\t// initialize callback structure\n\t\t\tICMDecompressionTrackingCallbackRecord callRecord;\n\t\t\tcallRecord.decompressionTrackingCallback = WriteFrameToBitmap;\n\t\t\tcallRecord.decompressionTrackingRefCon = NULL;\n\n\n\t\t\t// add attributes for pixel buffer that comes out\n\t\t\tCFMutableDictionaryRef pixelBufferAttributes = NULL;\n\t\t\tpixelBufferAttributes = CFDictionaryCreateMutable( NULL, 0,\n&kCFTypeDictionaryKeyCallBacks, &kCFTypeDictionaryValueCallBacks );\n\n\t\t\tOSType format = k24RGBPixelFormat;\n\t\t\tCFNumberRef pFormat = CFNumberCreate( NULL, kCFNumberSInt32Type, &format );\n\t\t\tCFDictionaryAddValue( pixelBufferAttributes,\nkCVPixelBufferPixelFormatTypeKey, pFormat );\n\t\t\tCFRelease( pFormat );\n\n\t\t\tint width = 1280;\n\t\t\tCFNumberRef pWidth = CFNumberCreate( NULL, kCFNumberIntType, &width );\n\t\t\tCFDictionaryAddValue( pixelBufferAttributes,\nkCVPixelBufferWidthKey, pWidth );\n\t\t\tCFRelease( pWidth );\n\n\t\t\tint height = 720;\n\t\t\tCFNumberRef pHeight = CFNumberCreate( NULL, kCFNumberIntType, &height );\n\t\t\tCFDictionaryAddValue( pixelBufferAttributes,\nkCVPixelBufferHeightKey, pHeight );\n\t\t\tCFRelease( pHeight );\n\n\t\t\t\n\t\t\t//  set up decompression session\n\t\t\tICMDecompressionSessionRef decompressionSession;\n\t\t\tImageDescriptionHandle description =\n(ImageDescriptionHandle)NewHandleClear(sizeof(ImageDescription));\n\t\t\tOSStatus nStatus = ICMDecompressionSessionCreate ( NULL,\ndescription, NULL, pixelBufferAttributes, &callRecord,\n&decompressionSession);\n\t\t\tCFRelease( pixelBufferAttributes );\n\n\n\t\t\t// get video frames from movie files and decode each frame\n\t\t\tTimeValue64 startTime =\nGetMediaAdvanceDecodeTime(GetTrackMedia(track));\t\t\t\t\t\t// for starting\ntime of each frame\n\t\t\tTimeValue64 DurationPerSample = 0;\t\t\t\t// fro duration of each frame\n\t\t\tint count = 0;\n\t\t\twhile(true)\n\t\t\t{\n\t\t\t\tByteCount size = 0;\n\t\t\t\tUInt8 *aData = new unsigned char[maxDataSize];\n\t\t\t\tnErr = GetMediaSample2(videoMedia, aData, maxDataSize, &size,\nstartTime, nil, &DurationPerSample, nil, nil, nil, 1, nil, nil);\n\n\n\t\t\t\tOSStatus nStatus = ICMDecompressionSessionDecodeFrame(\ndecompressionSession, (const UInt8*)aData, size, NULL, NULL, (void\n*)&count );\n\n\n\t\t\t\tcount++;\n\t\t\t\tstartTime += DurationPerSample;\n\n\t\t\t\tif(nErr != noErr)\n\t\t\t\t\tbreak;\n\n\t\t\t\tdelete [] aData;\n\t\t\t}\n\n\n\nHere is the definition for the callback funtion:\n\n\nstatic void WriteFrameToBitmap(\n\t\t\tvoid *decompressionTrackingRefCon,\n\t\t\tOSStatus result,\n\t\t\tICMDecompressionTrackingFlags decompressionTrackingFlags,\n\t\t\tCVPixelBufferRef pixelBuffer,\n\t\t\tTimeValue64 displayTime,\n\t\t\tTimeValue64 displayDuration,\n\t\t\tICMValidTimeFlags validTimeFlags,\n\t\t\tvoid *reserved,\n\t\t\tvoid *sourceFrameRefCon )\n{\n\t// when we get decoded frame, print it out to bitmap\n\tif ( (result == noErr) && (decompressionTrackingFlags &\nkICMDecompressionTracking_EmittingFrame) && pixelBuffer )\n\t{\n\t\tchar num[16];\n\t\tsprintf_s(num, 16, "%d", *((int *)sourceFrameRefCon));\n\t\tstd::string strFilePath = std::string("Bitmap0") + std::string(num);\n\n\t\tboost::shared_ptr<StillImage> pMyImage = StillImage::CreateInstance();\n\t\tsize_t size = CVPixelBufferGetDataSize(pixelBuffer);\n\t\tBYTE *mem_buffer = (BYTE*)malloc(size * sizeof(BYTE));\n\t\tstrcpy((char*)mem_buffer, (char *)CVPixelBufferGetBaseAddress(pixelBuffer));\n\t\tpMyImage->LoadImage(mem_buffer, size);\n\t\tpMyImage->SaveImage(strFilePath.c_str(), BMP);\n\t}\n\n\n}\n\n\nThanks very much.\n\nBo Peng\nSoftware Engineer\nCapella Systems, LLC\n _______________________________________________\nDo not post admin requests to the list. They will be ignored.\nQuickTime-API mailing list      (QuickTime-API@lists.apple.com)\nHelp/Unsubscribe/Update your Subscription:\nhttp://lists.apple.com/mailman/options/quicktime-api/mlsubscriber.tech%40csmining.org\n\nThis email sent to mlsubscriber.tech@csmining.org\n\n', 'subject': 'ICMDecompressionSessionDecodeFrame() is not working'}