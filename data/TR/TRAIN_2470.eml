{'body': 'On Apr 7, 2010, at 8:38 AM, Brandon Moon wrote:\r\n\r\n> On 4/7/2010 7:00 AM, Tomas Hurka wrote:\r\n>=20\r\n>> On 7 Apr 2010, at 00:29, Brandon Moon wrote:\r\n>>=20\r\n>>> I\'m having an issue with a JNI library when distributed as part of a =\r\nJNLP app (or Java Web Start).  The Java application loads the library, =\r\nthen calls a native function that spawns a new thread.  I attach this =\r\nthread to the JVM (using AttachCurrentThreadAsDaemon) and initialize a =\r\nJNIEnv object.  I then use this JNIEnv object to get the Java class and =\r\na few methods (so I can get back to java on certain events).  When I run =\r\nthis over Java Web Start, the call that requests a method id crashes.  I =\r\nhave no idea why this happens, and can\'t find any related errors online. =\r\n Has anyone else run into this problem?  Any input would be appreciated.\r\n>>>=20\r\n>>> This is the native code, the line that causes problems has *** =\r\naround it:\r\n>>>=20\r\n>>> // Attach this thread to Java VM\r\n>>>   if ((*javaVM)->AttachCurrentThreadAsDaemon(javaVM, =\r\n(void**)&eventPumpEnv, NULL) < 0) {\r\n>>>       NSLog(@"Failed to attach event pump to Java VM");\r\n>>>   }\r\n>>>   else {\r\n>>>       // Cache class and method references\r\n>>>       systemHooks =3D (*eventPumpEnv)->FindClass(eventPumpEnv, =\r\n"com/pixelture/systemhooks/SystemHooks");\r\n>>>       systemHooks =3D (*eventPumpEnv)->NewGlobalRef(eventPumpEnv, =\r\nsystemHooks);\r\n>>>=20\r\n>>> ***        notifySuspend =3D =\r\n(*eventPumpEnv)->GetStaticMethodID(eventPumpEnv, systemHooks, =\r\n"notifySuspend", "()V"); ***\r\n>>>       //notifySuspend =3D =\r\n(jmethodID)(*eventPumpEnv)->NewGlobalRef(eventPumpEnv, =\r\n(jobject)notifySuspend);\r\n>>>       notifySystemEvent =3D =\r\n(*eventPumpEnv)->GetStaticMethodID(eventPumpEnv, systemHooks, =\r\n"notifySystemEvent", "(JI)V");\r\n>>>       //notifySystemEvent =3D =\r\n(jmethodID)(*eventPumpEnv)->NewGlobalRef(eventPumpEnv, =\r\n(jobject)notifySystemEvent);\r\n>>>=20\r\n>>>       ...\r\n>>>=20\r\n>>>       if (DEBUG) NSLog(@"Attached PollingLoop to Java and got =\r\nenvironment & methods");\r\n>>>   }\r\n>>=20\r\n>> I think that class "com/pixelture/systemhooks/SystemHooks" is not =\r\nfound for some reason. Check that systemHooks is not NULL and that =\r\nFindClass method does not throw an exception.\r\n>=20\r\n> So you were right, Java is throwing a ClassNotFoundException, but I =\r\ndon\'t understand why this would be the case.  I have a static =\r\ninitializer in that class, and that\'s where it is loading and calling =\r\nthat native method.  How can the class not be found if that\'s where the =\r\nnative method is being called from?\r\n\r\nThink about it: you are calling your JNI function from the class\' static =\r\ninitializer. The class is not initialized yet. Attempts to find the =\r\n(uninitialized) class should probably fail.\r\n\r\nRegards,\r\nMike Swingler\r\nJava Runtime Engineer\r\nApple Inc.=\r\n _______________________________________________\r\nDo not post admin requests to the list. They will be ignored.\r\nJava-dev mailing list      (Java-dev@lists.apple.com)\r\nHelp/Unsubscribe/Update your Subscription:\r\nhttp://lists.apple.com/mailman/options/java-dev/mlsubscriber.tech%40csmining.org\r\n\r\nThis email sent to mlsubscriber.tech@csmining.org\r\n\r\n', 'subject': 'Re: Problems with JNI included in a JNLP on Mac OS X'}