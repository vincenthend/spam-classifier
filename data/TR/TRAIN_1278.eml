{'body': 'From nobody Fri Sep  7 01:04:39 2018\nContent-Type: text/plain; charset=ISO-8859-1\nContent-Transfer-Encoding: quoted-printable\n\nOn 05/12/2010 07:03 PM, Stefan Monnier wrote:\r\n>> The 64-bit vs 32-bit argument is multi-faceted.  It gets much deeper t=\r\nhan\r\n>> just addressing more than 3GB of RAM:\r\n>> * twice the transfer width on the bus\r\n>=20\r\n> Nope, no difference on the bus.   Most accesses will be\r\n> cache-line-sized anyway at that level.\r\n\r\nYou\'re kidding, right? You can push twice the data, which means faster\r\nCPU to memory utilization for CPU intensive applications. Flash anyone?\r\n\r\n>> * no memory split issues\r\n>=20\r\n> For <=3D3GB systems, that makes no difference.  And as someone running\r\n> a bigmem kernel on a 4GB system, I can say that even for other systems,=\r\n\r\n> it\'s not necessarily relevant.\r\n\r\nIt\'s very relevant. You must not have run into this issue much. 4:4\r\nkernel splits are the best you can do on a 32-bit system, but it comes\r\nat a performance cost. Splitting and performance are never an issue on\r\n64-bit until you\'ve reache 17 EB of RAM.\r\n\r\n>> * increased virtual address space\r\n>=20\r\n> Right.  Unlikely he\'ll ever notice it.\r\n\r\nWhether he will or won\'t isn\'t the issue. I\'m not discussing use cases,\r\nI\'m discussing the facts on why 64-bit is superior to 32-bit.\r\n\r\n>> * more breathing room for mmap()\'d files\r\n>=20\r\n> Again, unlikely he\'ll ever notice it (otherwise he wouldn\'t have asked)=\r\n=2E\r\n\r\nSee above.\r\n\r\n>> * deeper nested system calls with increased stability\r\n>=20\r\n> I see no evidence of increased stability and have no idea what you want=\r\n\r\n> to say with "deeper nested system calls".\r\n\r\nI\'ll give you an example. Use XFS on LVM, and export the mount over NFS.\r\nThe nested system calls in this scenario will cause a kernel oops on any\r\n4K 32-bit kernel nearly every time (the default for Debian GNU/Linux,\r\nFedora, Ubuntu, openSUSE, etc). On a 64-bit kernel, because you have the\r\nability to make deeper nested system calls, you have stability in your\r\ninfrastructure. Something that couldn\'t be achieved with a 32-bit kernel.=\r\n\r\n\r\n>> * certain applications and operations will execute faster\r\n>=20\r\n> Yup.  And others will be slower since you\'ll have to move around more\r\n> data (up to twice as much if your data is made up mostly of pointers),\r\n> which means that the apparent cache and RAM size will end up\r\n> being reduced.\r\n\r\nThe same would be said for a 32-bit application implemented the same\r\nway. Poor software development is hardly an argument against choosing a\r\nCPU architecture.\r\n\r\n>> If you have the hardware, you should definitely be running a 64-bit\r\n>> operating system, even if you don\'t have 4GB+ of RAM.\r\n>=20\r\n> If you have to ask, you probably won\'t notice any difference\r\n> either way.\r\n\r\nTo each their own. I for one want to get my money out of my hardware. If\r\nyou don\'t want a 64-bit system, then why did you pay for it?\r\n\r\n--=20\r\n=2E O .   O . O   . . O   O . .   . O .\r\n=2E . O   . O O   O . O   . O O   . . O\r\nO O O   . O .   . O O   O O .   O O O\r\n\r\n', 'subject': 'Re: What to choose for Core i5 64 bits?'}