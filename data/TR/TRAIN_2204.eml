{'body': 'On May 23, 2010, at 7:35 AM, Michael Hall wrote:\r\n\r\n> On May 23, 2010, at 9:16 AM, Mike Swingler wrote:\r\n>=20\r\n>> On May 22, 2010, at 5:01 PM, Michael Hall wrote:\r\n>>=20\r\n>>> On May 22, 2010, at 1:32 PM, Mike Swingler wrote:\r\n>>>=20\r\n>>>> Firefox is hardwired to Plugin1 with the JEP/MRJ, unless you remove =\r\nit them from (app)/Contents/MacOS/plugins\r\n>>>=20\r\n>>> Are you saying that if this is done for Firefox, the =\r\nContents/MacOS/plugins files are \'removed\', then plugin2 will =\r\nautomatically get picked up and work correctly?\r\n>>=20\r\n>> Yes. I usually create a new directory =\r\n(Firefox.app/Contents/MacOS/plugins/disabled) and move both =\r\nJavaEmbeddingPlugin.bundle and MRJPlugin.plugin into that directory so I =\r\nstill have them around.\r\n>>=20\r\n>> I\'m at a complete loss why this doesn\'t work for Camino.\r\n>=20\r\n> Both Mozilla right? Googling last night Firefox I think was the only =\r\none that came in both older Carbon and newer Cocoa flavors. But not sure =\r\nwhy they\'d work different in that same setup either.\r\n> Wouldn\'t some way for these other browsers to control this other than =\r\nmanipulating files be a little better? How many users not fortunate =\r\nenough to frequent the java-dev list would be aware they can do this? Is =\r\nthere an official Apple preference for either plugin or would the =\r\ndefault setting just de facto be that? Is there any way to provide 3rd =\r\nparty access to java preferences settings?\r\n\r\nI wouldn\'t suggest putting any time into engineering a Java-specific =\r\nswitch which is only going to be used by an audience of developers, who =\r\ncan follow steps on a wiki until Mozilla is ready to make the switch for =\r\nall of their customers. I think the plan is to just cut over completely =\r\nto Plugin2 and drop support for the JEP at some point (and we had to =\r\nship Update 2 & 7 with the Plugin2 symlink present in /Library/Internet =\r\nPlug-Ins to make that a possibility). But really someone from Mozilla =\r\nwould be best to comment on how and when they are planning to do what.\r\n\r\nI don\'t believe it makes sense for Apple to say which plugin "should be =\r\nthe default for all browsers". Plugin1 is simply the default for Safari =\r\nfor now (and will likely remain the default forever on Leopard). Chrome =\r\nnever bothered to implement a compatibility hack to load Plugin1, and =\r\nsimply did without Java support until Apple shipped an NPAPI Plugin2 =\r\nthat could render cooperatively via CoreGraphics, and didn\'t use an =\r\noverlay window.\r\n\r\nObviously, Plugin2 is a continuing work in progress that has several =\r\nmore technical challenges ahead (like interleaving hardware accelerated =\r\ndrawing), will likely require changes to browsers (like adopting =\r\nCoreAnimation-NPAPI drawing model), 3rd party libraries (like JOGL), and =\r\nwill probably provide a tiered user experience based on which browser =\r\nsupports which drawing models, event models, and other features. We are =\r\nalso still iterating on the user experience of how to handle applets =\r\nthat open their own windows and dialogs that are in a different process =\r\nfrom the browser.\r\n\r\nCurrently, we don\'t have any stored setting which tracks the switch =\r\nbetween Plugin1 or Plugin2. The state of the Java Preferences UI is =\r\nactually just built from the presence or non-presence of the =\r\nJavaPluginCocoa.bundle symlink. In a future release when we make Plugin2 =\r\nthe default for Safari, we\'ll simply delete the JavaPluginCocoa.bundle =\r\nin /Library/Internet Plug-ins (which we know Mozilla does not use), and =\r\nalter Java Preferences to write out a symlink to ~/Library/Internet =\r\nPlug-ins instead, so the change is only scoped to the user. At least =\r\nthat\'s the current plan, and it could change, but it\'s the best idea =\r\nwe\'ve got so far.\r\n\r\nI hope this provides some perspective on where we\'d like to go with =\r\nPlugin2,\r\nMike Swingler\r\nJava Runtime Engineer\r\nApple Inc.\r\n\r\n _______________________________________________\r\nDo not post admin requests to the list. They will be ignored.\r\nJava-dev mailing list      (Java-dev@lists.apple.com)\r\nHelp/Unsubscribe/Update your Subscription:\r\nhttp://lists.apple.com/mailman/options/java-dev/mlsubscriber.tech%40csmining.org\r\n\r\nThis email sent to mlsubscriber.tech@csmining.org\r\n\r\n', 'subject': 'State of Plugin2 (was Re: Java for Mac OS X 10.6 Update 2 and 10.5\r\n\tUpdate 7 are live)'}