{'body': 'Dear Anand,=20\r\n\r\nI tried your configuration file, but nothing changed.\r\n\r\nFor all of you who were so kind to try to help me, here are some good\r\nnews: I tried to install kernel 2.6.32 from lenny backports and the\r\nsound seems to work now. At least I could here the "login.wav" that most\r\nLenny users know.\r\n\r\nThe bad part is that now I cannot make the graphics card to work,\r\nbecause I should recompile the NVidia driver, but to accomplish this\r\ntask I need linux-headers-$(uname -r), and this package depend on  the\r\ncorresponding linux-kbuild, which won\'t install, according to apt-get\r\nmessage.\r\n\r\nThis is a pity, but at least now I\'m sure the sound card is working. My\r\nPC is brand new, so I\'m happy it\'s not a hardware problem, even though\r\nit\'s still a problem.\r\n\r\nSo I would say the issue is solved, from my point of view. I won\'t ask\r\nsome help to force the installation of linux-headers in this thread,\r\nmaybe I\'ll start another one.\r\n\r\nMany many thanks to everyone!\r\n\r\nOn Sun, 2010-05-02 at 09:26 +0530, Anand Sivaram wrote:\r\n> On Sat, May 1, 2010 at 22:49, Andrea Giuliano <sarkiaponius@alice.it> wro=\r\nte:\r\n> > Here is /usr/share/alsa/alsa.conf (that\'s a lot of lines!)\r\n> >\r\n> > Best regards.\r\n> >\r\n> > #\r\n> > #  ALSA library configuration file\r\n> > #\r\n> >\r\n> > # pre-load the configuration files\r\n> >\r\n> > @hooks [\r\n> >        {\r\n> >                func load\r\n> >                files [\r\n> >                        "/etc/asound.conf"\r\n> >                        "~/.asoundrc"\r\n> >                ]\r\n> >                errors false\r\n> >        }\r\n> > ]\r\n> >\r\n> > # load card-specific configuration files (on request)\r\n> >\r\n> > cards.@hooks [\r\n> >        {\r\n> >                func load\r\n> >                files [\r\n> >                        {\r\n> >                                @func concat\r\n> >                                strings [\r\n> >                                        { @func datadir }\r\n> >                                        "/cards/aliases.conf"\r\n> >                                ]\r\n> >                        }\r\n> >                ]\r\n> >        }\r\n> >        {\r\n> >                func load_for_all_cards\r\n> >                files [\r\n> >                        {\r\n> >                                @func concat\r\n> >                                strings [\r\n> >                                        { @func datadir }\r\n> >                                        "/cards/"\r\n> >                                        { @func private_string }\r\n> >                                        ".conf"\r\n> >                                ]\r\n> >                        }\r\n> >                ]\r\n> >                errors false\r\n> >        }\r\n> > ]\r\n> >\r\n> > #\r\n> > # defaults\r\n> > #\r\n> >\r\n> > # show all name hints also for definitions without hint {} section\r\n> > defaults.namehint.showall off\r\n> > # show just basic name hints\r\n> > defaults.namehint.basic on\r\n> > # show extended name hints\r\n> > defaults.namehint.extended off\r\n> > #\r\n> > defaults.ctl.card 0\r\n> > defaults.pcm.card 0\r\n> > defaults.pcm.device 0\r\n> > defaults.pcm.subdevice -1\r\n> > defaults.pcm.nonblock 1\r\n> > defaults.pcm.ipc_key 5678293\r\n> > defaults.pcm.ipc_gid audio\r\n> > defaults.pcm.ipc_perm 0660\r\n> > defaults.pcm.dmix.max_periods 0\r\n> > defaults.pcm.dmix.rate 48000\r\n> > defaults.pcm.dmix.format "unchanged"\r\n> > defaults.pcm.dmix.card defaults.pcm.card\r\n> > defaults.pcm.dmix.device defaults.pcm.device\r\n> > defaults.pcm.dsnoop.card defaults.pcm.card\r\n> > defaults.pcm.dsnoop.device defaults.pcm.device\r\n> > defaults.pcm.front.card defaults.pcm.card\r\n> > defaults.pcm.front.device defaults.pcm.device\r\n> > defaults.pcm.rear.card defaults.pcm.card\r\n> > defaults.pcm.rear.device defaults.pcm.device\r\n> > defaults.pcm.center_lfe.card defaults.pcm.card\r\n> > defaults.pcm.center_lfe.device defaults.pcm.device\r\n> > defaults.pcm.side.card defaults.pcm.card\r\n> > defaults.pcm.side.device defaults.pcm.device\r\n> > defaults.pcm.surround40.card defaults.pcm.card\r\n> > defaults.pcm.surround40.device defaults.pcm.device\r\n> > defaults.pcm.surround41.card defaults.pcm.card\r\n> > defaults.pcm.surround41.device defaults.pcm.device\r\n> > defaults.pcm.surround50.card defaults.pcm.card\r\n> > defaults.pcm.surround50.device defaults.pcm.device\r\n> > defaults.pcm.surround51.card defaults.pcm.card\r\n> > defaults.pcm.surround51.device defaults.pcm.device\r\n> > defaults.pcm.surround71.card defaults.pcm.card\r\n> > defaults.pcm.surround71.device defaults.pcm.device\r\n> > defaults.pcm.iec958.card defaults.pcm.card\r\n> > defaults.pcm.iec958.device defaults.pcm.device\r\n> > defaults.pcm.modem.card defaults.pcm.card\r\n> > defaults.pcm.modem.device defaults.pcm.device\r\n> > defaults.rawmidi.card 0\r\n> > defaults.rawmidi.device 0\r\n> > defaults.rawmidi.subdevice -1\r\n> > defaults.hwdep.card 0\r\n> > defaults.hwdep.device 0\r\n> > defaults.timer.class 2\r\n> > defaults.timer.sclass 0\r\n> > defaults.timer.card 0\r\n> > defaults.timer.device 0\r\n> > defaults.timer.subdevice 0\r\n> >\r\n> > #\r\n> > #  PCM interface\r\n> > #\r\n> >\r\n> > # redirect to load-on-demand extended pcm definitions\r\n> > pcm.cards cards.pcm\r\n> >\r\n> > pcm.default cards.pcm.default\r\n> > pcm.front cards.pcm.front\r\n> > pcm.rear cards.pcm.rear\r\n> > pcm.center_lfe cards.pcm.center_lfe\r\n> > pcm.side cards.pcm.side\r\n> > pcm.surround40 cards.pcm.surround40\r\n> > pcm.surround41 cards.pcm.surround41\r\n> > pcm.surround50 cards.pcm.surround50\r\n> > pcm.surround51 cards.pcm.surround51\r\n> > pcm.surround71 cards.pcm.surround71\r\n> > pcm.iec958 cards.pcm.iec958\r\n> > pcm.spdif iec958\r\n> > pcm.dmix cards.pcm.dmix\r\n> > pcm.dsnoop cards.pcm.dsnoop\r\n> > pcm.modem cards.pcm.modem\r\n> > pcm.phoneline cards.pcm.phoneline\r\n> >\r\n> > pcm.hw {\r\n> >        @args [ CARD DEV SUBDEV ]\r\n> >        @args.CARD {\r\n> >                type string\r\n> >                default {\r\n> >                        @func getenv\r\n> >                        vars [\r\n> >                                ALSA_PCM_CARD\r\n> >                                ALSA_CARD\r\n> >                        ]\r\n> >                        default {\r\n> >                                @func refer\r\n> >                                name defaults.pcm.card\r\n> >                        }\r\n> >                }\r\n> >        }\r\n> >        @args.DEV {\r\n> >                type integer\r\n> >                default {\r\n> >                        @func igetenv\r\n> >                        vars [\r\n> >                                ALSA_PCM_DEVICE\r\n> >                        ]\r\n> >                        default {\r\n> >                                @func refer\r\n> >                                name defaults.pcm.device\r\n> >                        }\r\n> >                }\r\n> >        }\r\n> >        @args.SUBDEV {\r\n> >                type integer\r\n> >                default {\r\n> >                        @func refer\r\n> >                        name defaults.pcm.subdevice\r\n> >                }\r\n> >        }\r\n> >        type hw\r\n> >        card $CARD\r\n> >        device $DEV\r\n> >        subdevice $SUBDEV\r\n> >        hint {\r\n> >                show {\r\n> >                        @func refer\r\n> >                        name defaults.namehint.extended\r\n> >                }\r\n> >                description "Direct hardware device without any conversi=\r\nons"\r\n> >        }\r\n> > }\r\n> >\r\n> > pcm.plughw {\r\n> >        @args [ CARD DEV SUBDEV ]\r\n> >        @args.CARD {\r\n> >                type string\r\n> >                default {\r\n> >                        @func getenv\r\n> >                        vars [\r\n> >                                ALSA_PCM_CARD\r\n> >                                ALSA_CARD\r\n> >                        ]\r\n> >                        default {\r\n> >                                @func refer\r\n> >                                name defaults.pcm.card\r\n> >                        }\r\n> >                }\r\n> >        }\r\n> >        @args.DEV {\r\n> >                type integer\r\n> >                default {\r\n> >                        @func igetenv\r\n> >                        vars [\r\n> >                                ALSA_PCM_DEVICE\r\n> >                        ]\r\n> >                        default {\r\n> >                                @func refer\r\n> >                                name defaults.pcm.device\r\n> >                        }\r\n> >                }\r\n> >        }\r\n> >        @args.SUBDEV {\r\n> >                type integer\r\n> >                default {\r\n> >                        @func refer\r\n> >                        name defaults.pcm.subdevice\r\n> >                }\r\n> >        }\r\n> >        type plug\r\n> >        slave.pcm {\r\n> >                type hw\r\n> >                card $CARD\r\n> >                device $DEV\r\n> >                subdevice $SUBDEV\r\n> >        }\r\n> >        hint {\r\n> >                show {\r\n> >                        @func refer\r\n> >                        name defaults.namehint.extended\r\n> >                }\r\n> >                description "Hardware device with all software conversio=\r\nns"\r\n> >        }\r\n> > }\r\n> >\r\n> > pcm.plug {\r\n> >        @args [ SLAVE ]\r\n> >        @args.SLAVE {\r\n> >                type string\r\n> >        }\r\n> >        type plug\r\n> >        slave.pcm $SLAVE\r\n> > }\r\n> >\r\n> > pcm.shm {\r\n> >        @args [ SOCKET PCM ]\r\n> >        @args.SOCKET {\r\n> >                type string\r\n> >        }\r\n> >        @args.PCM {\r\n> >                type string\r\n> >        }\r\n> >        type shm\r\n> >        server $SOCKET\r\n> >        pcm $PCM\r\n> > }\r\n> >\r\n> > pcm.tee {\r\n> >        @args [ SLAVE FILE FORMAT ]\r\n> >        @args.SLAVE {\r\n> >                type string\r\n> >        }\r\n> >        @args.FILE {\r\n> >                type string\r\n> >        }\r\n> >        @args.FORMAT {\r\n> >                type string\r\n> >                default raw\r\n> >        }\r\n> >        type file\r\n> >        slave.pcm $SLAVE\r\n> >        file $FILE\r\n> >        format $FORMAT\r\n> > }\r\n> >\r\n> > pcm.file {\r\n> >        @args [ FILE FORMAT ]\r\n> >        @args.FILE {\r\n> >                type string\r\n> >        }\r\n> >        @args.FORMAT {\r\n> >                type string\r\n> >                default raw\r\n> >        }\r\n> >        type file\r\n> >        slave.pcm null\r\n> >        file $FILE\r\n> >        format $FORMAT\r\n> > }\r\n> >\r\n> > pcm.null {\r\n> >        type null\r\n> >        hint {\r\n> >                show {\r\n> >                        @func refer\r\n> >                        name defaults.namehint.basic\r\n> >                }\r\n> >                description "Discard all samples (playback) or generate =\r\nzero samples\r\n> > (capture)"\r\n> >        }\r\n> > }\r\n> >\r\n> > #\r\n> > #  Control interface\r\n> > #\r\n> >\r\n> > ctl.default {\r\n> >        type hw\r\n> >        card {\r\n> >                @func getenv\r\n> >                vars [\r\n> >                        ALSA_CTL_CARD\r\n> >                        ALSA_CARD\r\n> >                ]\r\n> >                default {\r\n> >                        @func refer\r\n> >                        name defaults.ctl.card\r\n> >                }\r\n> >        }\r\n> > }\r\n> >\r\n> > ctl.hw {\r\n> >        @args [ CARD ]\r\n> >        @args.CARD {\r\n> >                type string\r\n> >                default {\r\n> >                        @func getenv\r\n> >                        vars [\r\n> >                                ALSA_CTL_CARD\r\n> >                                ALSA_CARD\r\n> >                        ]\r\n> >                        default {\r\n> >                                @func refer\r\n> >                                name defaults.ctl.card\r\n> >                        }\r\n> >                }\r\n> >        }\r\n> >        type hw\r\n> >        card $CARD\r\n> > }\r\n> >\r\n> > ctl.shm {\r\n> >        @args [ SOCKET CTL ]\r\n> >        @args.SOCKET {\r\n> >                type string\r\n> >        }\r\n> >        @args.CTL {\r\n> >                type string\r\n> >        }\r\n> >        type shm\r\n> >        server $SOCKET\r\n> >        ctl $CTL\r\n> > }\r\n> >\r\n> > #\r\n> > #  RawMidi interface\r\n> > #\r\n> >\r\n> > rawmidi.default {\r\n> >        type hw\r\n> >        card {\r\n> >                @func getenv\r\n> >                vars [\r\n> >                        ALSA_RAWMIDI_CARD\r\n> >                        ALSA_CARD\r\n> >                ]\r\n> >                default {\r\n> >                        @func refer\r\n> >                        name defaults.rawmidi.card\r\n> >                }\r\n> >        }\r\n> >        device {\r\n> >                @func igetenv\r\n> >                vars [\r\n> >                        ALSA_RAWMIDI_DEVICE\r\n> >                ]\r\n> >                default {\r\n> >                        @func refer\r\n> >                        name defaults.rawmidi.device\r\n> >                }\r\n> >        }\r\n> > }\r\n> >\r\n> > rawmidi.hw {\r\n> >        @args [ CARD DEV SUBDEV ]\r\n> >        @args.CARD {\r\n> >                type string\r\n> >                default {\r\n> >                        @func getenv\r\n> >                        vars [\r\n> >                                ALSA_RAWMIDI_CARD\r\n> >                                ALSA_CARD\r\n> >                        ]\r\n> >                        default {\r\n> >                                @func refer\r\n> >                                name defaults.rawmidi.card\r\n> >                        }\r\n> >                }\r\n> >        }\r\n> >        @args.DEV {\r\n> >                type integer\r\n> >                default {\r\n> >                        @func igetenv\r\n> >                        vars [\r\n> >                                ALSA_RAWMIDI_DEVICE\r\n> >                        ]\r\n> >                        default {\r\n> >                                @func refer\r\n> >                                name defaults.rawmidi.device\r\n> >                        }\r\n> >                }\r\n> >        }\r\n> >        @args.SUBDEV {\r\n> >                type integer\r\n> >                default -1\r\n> >        }\r\n> >        type hw\r\n> >        card $CARD\r\n> >        device $DEV\r\n> >        subdevice $SUBDEV\r\n> >        hint {\r\n> >                description "Direct rawmidi driver device"\r\n> >                device $DEV\r\n> >        }\r\n> > }\r\n> >\r\n> > rawmidi.virtual {\r\n> >        @args [ MERGE ]\r\n> >        @args.MERGE {\r\n> >                type string\r\n> >                default 1\r\n> >        }\r\n> >        type virtual\r\n> >        merge $MERGE\r\n> > }\r\n> >\r\n> > #\r\n> > #  Sequencer interface\r\n> > #\r\n> >\r\n> > seq.default {\r\n> >        type hw\r\n> > }\r\n> >\r\n> > seq.hw {\r\n> >        type hw\r\n> > }\r\n> >\r\n> > #\r\n> > #  HwDep interface\r\n> > #\r\n> >\r\n> > hwdep.default {\r\n> >        type hw\r\n> >        card {\r\n> >                @func getenv\r\n> >                vars [\r\n> >                        ALSA_HWDEP_CARD\r\n> >                        ALSA_CARD\r\n> >                ]\r\n> >                default {\r\n> >                        @func refer\r\n> >                        name defaults.hwdep.card\r\n> >                }\r\n> >        }\r\n> >        device {\r\n> >                @func igetenv\r\n> >                vars [\r\n> >                        ALSA_HWDEP_DEVICE\r\n> >                ]\r\n> >                default {\r\n> >                        @func refer\r\n> >                        name defaults.hwdep.device\r\n> >                }\r\n> >        }\r\n> > }\r\n> >\r\n> > hwdep.hw {\r\n> >        @args [ CARD DEV ]\r\n> >        @args.CARD {\r\n> >                type string\r\n> >                default {\r\n> >                        @func getenv\r\n> >                        vars [\r\n> >                                ALSA_HWDEP_CARD\r\n> >                                ALSA_CARD\r\n> >                        ]\r\n> >                        default {\r\n> >                                @func refer\r\n> >                                name defaults.hwdep.card\r\n> >                        }\r\n> >                }\r\n> >        }\r\n> >        @args.DEV {\r\n> >                type integer\r\n> >                default {\r\n> >                        @func igetenv\r\n> >                        vars [\r\n> >                                ALSA_HWDEP_DEVICE\r\n> >                        ]\r\n> >                        default {\r\n> >                                @func refer\r\n> >                                name defaults.hwdep.device\r\n> >                        }\r\n> >                }\r\n> >        }\r\n> >        type hw\r\n> >        card $CARD\r\n> >        device $DEV\r\n> > }\r\n> >\r\n> > #\r\n> > #  Timer interface\r\n> > #\r\n> >\r\n> > timer_query.default {\r\n> >        type hw\r\n> > }\r\n> >\r\n> > timer_query.hw {\r\n> >        type hw\r\n> > }\r\n> >\r\n> > timer.default {\r\n> >        type hw\r\n> >        class {\r\n> >                @func refer\r\n> >                name defaults.timer.class\r\n> >        }\r\n> >        sclass {\r\n> >                @func refer\r\n> >                name defaults.timer.sclass\r\n> >        }\r\n> >        card {\r\n> >                @func refer\r\n> >                name defaults.timer.card\r\n> >        }\r\n> >        device {\r\n> >                @func refer\r\n> >                name defaults.timer.device\r\n> >        }\r\n> >        subdevice {\r\n> >                @func refer\r\n> >                name defaults.timer.subdevice\r\n> >        }\r\n> >        hint.description "Default direct hardware timer device"\r\n> > }\r\n> >\r\n> > timer.hw {\r\n> >        @args [ CLASS SCLASS CARD DEV SUBDEV ]\r\n> >        @args.CLASS {\r\n> >                type integer\r\n> >                default {\r\n> >                        @func refer\r\n> >                        name defaults.timer.class\r\n> >                }\r\n> >        }\r\n> >        @args.SCLASS {\r\n> >                type integer\r\n> >                default {\r\n> >                        @func refer\r\n> >                        name defaults.timer.sclass\r\n> >                }\r\n> >        }\r\n> >        @args.CARD {\r\n> >                type string\r\n> >                default {\r\n> >                        @func refer\r\n> >                        name defaults.timer.card\r\n> >                }\r\n> >        }\r\n> >        @args.DEV {\r\n> >                type integer\r\n> >                default {\r\n> >                        @func refer\r\n> >                        name defaults.timer.device\r\n> >                }\r\n> >        }\r\n> >        @args.SUBDEV {\r\n> >                type integer\r\n> >                default {\r\n> >                        @func refer\r\n> >                        name defaults.timer.subdevice\r\n> >                }\r\n> >        }\r\n> >        type hw\r\n> >        class $CLASS\r\n> >        sclass $SCLASS\r\n> >        card $CARD\r\n> >        device $DEV\r\n> >        subdevice $SUBDEV\r\n> > }\r\n> >\r\n> >\r\n> > On Sat, 2010-05-01 at 21:40 +0530, Anand Sivaram wrote:\r\n> >> On Sat, May 1, 2010 at 20:55, Andrea Giuliano <sarkiaponius@alice.it> =\r\nwrote:\r\n> >> > Here aplay -l:\r\n> >> >\r\n> >> > card 0: NVidia [HDA NVidia], device 0: HDA Generic [HDA Generic]\r\n> >> >  Subdevices: 1/1\r\n> >> >  Subdevice #0: subdevice #0\r\n> >> >\r\n> >> > Here is amixer info, too:\r\n> >> >\r\n> >> > Card default \'NVidia\'/\'HDA NVidia at 0xf9ef8000 irq 22\'\r\n> >> >  Mixer name    : \'VIA ID 397\'\r\n> >> >  Components    : \'HDA:11060397\'\r\n> >> >  Controls      : 4\r\n> >> >  Simple ctrls  : 3\r\n> >> >\r\n> >> > Actually, you are right, it\'s rather strange I see just a few contro=\r\nls,\r\n> >> > they should be many more (my card is a 7.1 points one).\r\n> >> >\r\n> >> > On Sat, 2010-05-01 at 14:08 +0000, Camale=C3=B3n wrote:\r\n> >> >> On Sat, 01 May 2010 15:52:46 +0200, Andrea Giuliano wrote:\r\n> >> >>\r\n> >> >> > Alsamixer doesn\'i show muted input. Not does gnome-volume-setting=\r\ns. I\r\n> >> >> > also checked out gnome-sound-properties, and it gives no errors a=\r\nt all,\r\n> >> >> > as if it thinks everything is working fine.\r\n> >> >> >\r\n> >> >> > Here is the output from amixer:\r\n> >> >>\r\n> >> >> Only "master", "PCM" and "capture"?\r\n> >> >>\r\n> >> >> No "mic" and no additional "aux" or "surround" outputs? :-?\r\n> >> >>\r\n> >> >> > and here is /proc/asound/cards\r\n> >> >> >\r\n> >> >> >  0 [NVidia         ]: HDA-Intel - HDA NVidia\r\n> >> >> >                       HDA NVidia at 0xf9ef8000 irq 22\r\n> >> >> >\r\n> >> >> > I\'m going to try a LiveCD or such, but I\'m not very optimistic.\r\n> >> >>\r\n> >> >> Modern motherboards use to include 5.1 or 7.1 audio channel chipset=\r\n, it\'s\r\n> >> >> a bit weird your amixer output only shows 3 devices...\r\n> >> >>\r\n> >> >> This may sound silly, but have you tried to plug the speakers jack =\r\nin all\r\n> >> >> the outlets available?\r\n> >> >>\r\n> >> >> What does "aplay -l" say?\r\n> >> >>\r\n> >> >> Greetings,\r\n> >> >>\r\n> >> >> --\r\n> >> >> Camale=C3=B3n\r\n> >> >>\r\n> >> >>\r\n> >> >\r\n> >> >\r\n> >> > --\r\n> >> > To UNSUBSCRIBE, email to debian-user-REQUEST@lists.debian.org\r\n> >> > with a subject of "unsubscribe". Trouble? Contact listmaster@lists.d=\r\nebian.org\r\n> >> > Archive: http://lists.debian.org/1272727535.20670.1.camel@debian\r\n> >> >\r\n> >> >\r\n> >>\r\n> >> What is the output of /usr/share/alsa/alsa.conf\r\n> >>\r\n> >>\r\n> >\r\n>=20\r\n> This is the working alsa.conf of my athlon mcp61 machine.\r\n> Could you try the following.\r\n> cd /usr/share/alsa\r\n> mv alsa.conf alsa.conf.original (_do_ _not_ delete it, just move it so\r\n> that you could copy  it back in case required)\r\n> gunzip /path/to/download/alsa.conf.gz\r\n> mv /path/to/download/alsa.conf ./\r\n> restart machine.\r\n\r\n\r\n-- \r\nTo UNSUBSCRIBE, email to debian-user-REQUEST@lists.debian.org \r\nwith a subject of "unsubscribe". Trouble? Contact listmaster@lists.debian.org\r\nArchive: http://lists.debian.org/1272811347.3525.8.camel@debian\r\n\r\n\r\n', 'subject': '[SOLVED] Re: NVidia MCP61, no sound...'}