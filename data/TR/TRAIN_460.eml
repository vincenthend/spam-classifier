{'body': '>> I have no idea what that\'s supposed to mean. You\'d use a decompression session and do whatever you want with the pixel buffers it gives you. Why do you think you can\'t?\n\nI believe this is a newbie question related to the general use of the decompression session. Let me try to explain: \n\nFirst I initialize my decompression session within the data proc callback function:\n\n*******START***********\nif (videoData->decompressionSession == NULL) {\n    cout << "create decompression session: ";\n    ImageDescriptionHandle imageDesc = (ImageDescriptionHandle)NewHandle(0);\n    err = SGGetChannelSampleDescription(c, (Handle)imageDesc);\n    err = createDecompressionSession( imageDesc, \n                                videoData->width, videoData->height,k32BGRAPixelFormat, \n                                displayAndCompressFrame, videoData, \n                                &videoData->decompressionSession);\n\n    if (err == 0) cout << "SUCCESS" << endl; else cout << "FAILED" << endl;\n}\n*******END***********\n\n\nI do the same for a compression session:\n\n\n*******START***********\nif (videoData->compressionSession == NULL) {\n    cout << "create compression session: ";\n    err = createCompressionSession(\n                                videoData->width, videoData->height, videoData->codecType, \n                                videoData->averageDataRate, videoData->timeScale,\n                                useCompressedFrame, videoData,\n                                &videoData->compressionSession );\n    if (err == 0) cout << "SUCCESS" << endl; else cout << "FAILED" << endl;\n}   \n*******END***********\n\n\nFurthermore, within the data proc callback I have the decompression call:\n\n\n*******START***********\nerr = ICMDecompressionSessionDecodeFrame( videoData->decompressionSession,\n                        (UInt8 *)p, len, NULL, &frameTime, videoData );\n*******END***********\n\n\nwhich finally allows me to access the pure pixelBuffer to be accessed in my "displayAndCompressFrame" function.\nIn my "displayAndCompressFrame"-function I display the pixels on a custom frame and compress the frame via:\n\n\n*******START***********\nerr = ICMCompressionSessionEncodeFrame( videoData->compressionSession, pixelBuffer,\n                                displayTime, displayDuration, validTimeFlags,\n                                frameOptions, NULL, NULL );\n*******END***********\n\n\nThis triggers my "useCompressedFrame"-function:\n\n\n*******START***********\nstatic OSStatus useCompressedFrame( void *encodedFrameOutputRefCon,\n                                   ICMCompressionSessionRef session,\n                                   OSStatus err,\n                                   ICMEncodedFrameRef encodedFrame,\n                                   void *reserved ){\n\n  int size = ICMEncodedFrameGetDataSize( encodedFrame );\n\n  //// WHAT NOW ???\n\n  return err;\n}\n******** END***************\n\n\nin which I can send the encoded frame across a network but before I involve any network functionality I first want to test if the decompression works. However, here is the problem and I will start with a simple first question: \n\nCan I feed the encoded frame to the same decompression session which decompresses my device data and displays it or do I need to create a second decompression session with the respective callback ? If I need to create another decompression session are there any special requirements I need to take care of  - so far my first try also failed.\n\nThanks a lot in advance,\nbest\n\n-- A l e x\n\n\n\n\n> \n> \n> --\n> Seth Willits\n> \n> \n> \n> _______________________________________________\n> Do not post admin requests to the list. They will be ignored.\n> QuickTime-API mailing list      (QuickTime-API@lists.apple.com)\n> Help/Unsubscribe/Update your Subscription:\n> http://lists.apple.com/mailman/options/quicktime-api/alexander_carot%40gmx.net\n> \n> This email sent to alexander_carot@gmx.net\n\n _______________________________________________\nDo not post admin requests to the list. They will be ignored.\nQuickTime-API mailing list      (QuickTime-API@lists.apple.com)\nHelp/Unsubscribe/Update your Subscription:\nhttp://lists.apple.com/mailman/options/quicktime-api/mlsubscriber.tech%40csmining.org\n\nThis email sent to mlsubscriber.tech@csmining.org\n\n', 'subject': 'Re: ICMCompressionSession question'}