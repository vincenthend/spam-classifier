{'body': "Gary Coady wrote:\n> Oops, I tend to feel like that most times! I tend to feel that if we\n> have extremely good compilation tools, then those tools should be able\n> to do the inlining and optimisation far better than I could. That's the\n> theory anyway :) And there's always a tradeoff with inlining between\n> speed and memory bloat (which may sometimes be no tradeoff if swap\n> starts getting involved...)\n\n<mild rant>\nThis is something that often annoys me. Programmers can spend hours inlining\ncode and relying on optimisation tools to improve performance. The best\nperformance improvement can be obtained by fixing the algorithm.\n\nMost function calls get made very rarely. Optimising them often makes no\nsense, produces illegable code and nonsense algorithms.\n\nInlining will help in functions that get called frequently and are small -\nsuch as string manipulation routines. But these are a small part of most\napplications.\n\nOne example I frequently see is people optimising a database function call.\nMost database accesses involve many abstraction layers and millions of\ninstruction cycles. Trying to save a few instruction cycles would be a cost\nsaving of, say, 5 seconds in 20 hours.\n\nBut a simple hashmap cache of common data without any compiler or inline\noptimisations can turn that same 20 hours into 10 minutes.\n\n</mild rant>\n\n- Matthew (who really should be writing code)\n\n\n__________________________________________________\nDo You Yahoo!?\nEverything you'll ever need on one web page\nfrom News and Sport to Email and Music Charts\nhttp://uk.my.yahoo.com\n\n\n-- \nIrish Linux Users' Group: ilug@linux.ie\nhttp://www.linux.ie/mailman/listinfo/ilug for (un)subscription information.\nList maintainer: listmaster@linux.ie\n\n\n", 'subject': 'Re: [ILUG] slashdot EW Dijkstra humor'}