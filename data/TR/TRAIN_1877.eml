{'body': 'On Monday 26 April 2010 20:27:14 Celejar wrote:\n> On Mon, 26 Apr 2010 17:03:07 -0500\n> "Boyd Stephen Smith Jr." <bss@iguanasuicide.net> wrote:\n> > On Monday 26 April 2010 16:34:36 Celejar wrote:\n> > > On Mon, 26 Apr 2010 16:16:32 -0500\n> > > "Boyd Stephen Smith Jr." <bss@iguanasuicide.net> wrote:\n> > > > On Monday 26 April 2010 15:09:57 Celejar wrote:\n> > > > > What makes the non-free firmware question particularly interesting\n> > > > > is that the alternative is often to hardcode the functionality into\n> > > > > the hardware.  Now, if you had a board with completely closed HW,\n> > > > > but that presented an open, well documented interface for the\n> > > > > driver, most people would be very happy (although there are, of\n> > > > > course, the open hardware crusaders - more power to them!).  So,\n> > > > > now that they\'ve simply implemented some of that functionality in\n> > > > > SW, in the form of firmware which the driver installs on the card,\n> > > > > but which has nothing to do with your host machine, are you really\n> > > > > any worse off?\n> > > >\n> > > > As a distributor you may very well be.  If you can\'t provide the\n> > > > source code, you can\'t satisfy the terms of the GPL (usually).\n> > >\n> > > ?  We\'re talking about firmware for things like wireless cards,\n> > > produced by the HW manufacturers, e.g., Broadcom.  Where does the GPL\n> > > enter into this?\n> >\n> > Some are included in the tarball provided by the Linux kernel team, which\n> > is distributed under the GPLv2.  In particular, I am thinking of the\n> > iwl3945 firmware that is required to run my wireless card.\n> >\n> > It doesn\'t matter what upstream wants to call source code.  The GPL(v2)\n> > defines it as the preferred form for making modifications.  (GPLv2,\n> > section 3.)  It is unlikely that the firmware was written in a hex editor\n> > (or equivalent).  Most likely it is C source for a freestanding\n> > (non-hosted) environment with some manufacturer-specific libraries, but\n> > it could also be in some manufacturer-specific assembly code.  Either\n> > form would be better for making modifications than a binary blob.\n> \n> This is all very well, but the context of this subthread is James\'s\n> statement that he avoids installing the non-free firmware that his HW\n> requires out of a commitment to FLOSS ideals, to which I responded that\n> I\'m not sure if one is really worse off installing such firmware, or\n> using a card that just has that logic built in to its non-free HW.\n\nAnd I claim he would be better off using a card that doesn\'t use firmware[1] \nor uses free firmware, since non-free firmware is an issue for distributors \nand it\'s relatively easy to "accidentally" participate in distributing \nsoftware in violation of its license.\n\nI wouldn\'t want to be stuck without non-free available, but I recommend making \nhardware purchases that allow you to avoid non-free as much as possible.  I\'m \ngradually moving that way myself.  (Desktop and laptop each need one driver \nfrom non-free.)\n\nOnce you\'ve got the hardware, you might as well use it, even if it requires \nnon-free drivers.  The manufacturer has already got their cut of what you \npaid; you are hurting none but yourself by not using it.  You should try and \navoid becoming dependent on that hardware, since that makes you dependent on \nnon-free software.\n\n[1] "Firmware" here is specifically limited to executable data transmitted to \nthe device from a host operating system, and does not include executable data \nloaded from an EEPROM (or similar) that is provided with the device.\n-- \nBoyd Stephen Smith Jr.           \t ,= ,-_-. =.\nbss@iguanasuicide.net            \t((_/)o o(\\_))\nICQ: 514984 YM/AIM: DaTwinkDaddy \t `-\'(. .)`-\'\nhttp://iguanasuicide.net/        \t     \\_/\n', 'subject': 'Re: The future of "nv" driver (was: Linux compatible mainboards -another thought)'}