{'body': "I've written my Apple Push Notification client code in Java (on my =\r\nserver). I open an SSL socket to Apple with a client-side cert, and push =\r\na stream of bytes.\r\n\r\nIf part of that stream is mal-formed, as I understand it, Apple closes =\r\ntheir end of the connection. Also as I understand it, this is made =\r\nevident to a C client because the number of bytes written to the socket =\r\nis 0 (or less than was intended).\r\n\r\nHowever, in Java, I'm finding no evidence at all that Apple has stopped =\r\naccepting push notifications, except that I can see the last =\r\nnotification doesn't go through (I set up a test case with one good and =\r\none bad token. By changing the order, I can see it work or not work).\r\n\r\nWhat do I need to do to detect this condition in Java? I tried checking =\r\nthat the connection is still open and not half-open after each token, =\r\nbut it always looks good.\r\n\r\nTIA,\r\nRick\r\n\r\n _______________________________________________\r\nDo not post admin requests to the list. They will be ignored.\r\nJava-dev mailing list      (Java-dev@lists.apple.com)\r\nHelp/Unsubscribe/Update your Subscription:\r\nhttp://lists.apple.com/mailman/options/java-dev/mlsubscriber.tech%40csmining.org\r\n\r\nThis email sent to mlsubscriber.tech@csmining.org\r\n\r\n", 'subject': 'Detecting a closed SSL connection'}